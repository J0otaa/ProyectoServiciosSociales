package frontend.screens;

import java.awt.Color;

class MiSwingWorker extends javax.swing.SwingWorker<Void, Integer> {

    private final javax.swing.JProgressBar progressBar;

    public MiSwingWorker(javax.swing.JProgressBar progressBar) {
        this.progressBar = progressBar;
    }

    @Override
    protected Void doInBackground() throws Exception {

        for (int i = 0; i <= 100; i++) {

            Thread.sleep(25); // Simula una operación que lleva tiempo
            this.publish(i);
        }

        return null;
    }

    @Override
    protected void process(java.util.List<Integer> chunks) {
        // Este método se ejecuta en el hilo de eventos de Swing
        // Se llama cuando se invoca publish()
        int progress = chunks.get(chunks.size() - 1);
        progressBar.setValue(progress);
    }
}

public class InitialScreen extends javax.swing.JFrame {

    //variables globales
    String PrimaryColor = "#1575FF";

    public InitialScreen() {
        initComponents();
        this.progressBar1.setColorBG(components.getBackground());
        this.progressBar1.setColorProgress(Color.WHITE);
        MiSwingWorker wk = new MiSwingWorker(this.progressBar1);
        wk.execute();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        components = new javax.swing.JPanel();
        iconPanel = new javax.swing.JPanel();
        progressBar1 = new frontend.modelsUI.ProgressBar();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAlwaysOnTop(true);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        components.setBackground(new java.awt.Color(50, 127, 239));
        components.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        iconPanel.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout iconPanelLayout = new javax.swing.GroupLayout(iconPanel);
        iconPanel.setLayout(iconPanelLayout);
        iconPanelLayout.setHorizontalGroup(
            iconPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 500, Short.MAX_VALUE)
        );
        iconPanelLayout.setVerticalGroup(
            iconPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 510, Short.MAX_VALUE)
        );

        components.add(iconPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 500, 510));
        components.add(progressBar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 540, 1080, 5));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/frontend/imagenes/1614676804692.jpg"))); // NOI18N
        jLabel1.setMaximumSize(new java.awt.Dimension(970, 510));
        jLabel1.setMinimumSize(new java.awt.Dimension(970, 510));
        jLabel1.setPreferredSize(new java.awt.Dimension(970, 510));
        components.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 0, 865, 510));

        getContentPane().add(components, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InitialScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InitialScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InitialScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InitialScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InitialScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel components;
    private javax.swing.JPanel iconPanel;
    private javax.swing.JLabel jLabel1;
    private frontend.modelsUI.ProgressBar progressBar1;
    // End of variables declaration//GEN-END:variables
}
